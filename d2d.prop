# Use org.apache.qetest.xsl.ConformanceTest test with this properties 
#   file to iterate over all the 'contrib' tests
# This file includes descriptive comments for most major options
# Most other xml-xalan\test tests use similar options

#---- Choose locations: where to find files, where to log to
# testDir is where root of test xml/xsl files are
# inputDir=\\xml-xalan\\test\\tests\\temp
# inputDir=\\xml-xalan\\test\\tests\\conf
inputDir=.\\tests\\conf

# goldDir is where the 'gold' files to check against live
goldDir=\\user\\dtm\\xml-xalan\\test\\tests\\conf-gold

# outDir is where we put the actual output files and any logs or error dumps
outputDir=.\\results-d2d

# All test output will be saved in this file
logFile=.\\results-d2d\\ConfTest.xml

#---- Choose processor: flavors supported: xalan|trax|other...
# Update for StylesheetTestletDriver/trax.dom 25-Jun-01 -sc 
flavor=trax.dom

#---- Choose tests: Filter to only run specific sets of tests
# Set category to run only the single named directory
# category=axes
# category=idkey

# Set excludes to exclude specific tests: foo.xsl;bar.xsl;goo.xsl
# (58 exclusions for the DOM tests at this time)
# attribvaltemplate08.xsl excluded because it outputs illegal XML with less 
#           whitespace outside the document element (DOMs have no whitespace outside 
#           of the root node.
# impincl12.xsl excluded because it outputs accesses file via http inside lotus firewall.
# attribset17.xsl excluded because it outputs HTML that can not be compared.
# axes59.xsl excluded because it relies on the order of namespace nodes.
# axes62.xsl excluded because it relies on the order of namespace nodes.
# conflictres19.xsl excluded because it relies on the order of attribute and namespace nodes.
# idkey01.xsl excluded because it produces multirooted result tree (need document fragment).
# idkey07.xsl excluded because it uses hash values instead of node IDs for generate-id.
# idkey09.xsl excluded because non-valid XML has different number blank lines (not a bug, I think).
# idkey30.xsl excluded because it uses hash values instead of node IDs for generate-id.
# idkey31.xsl excluded because it uses hash values instead of node IDs for generate-id.
# lre04.xsl excluded because it produces multirooted result tree (need document fragment).
# lre05.xsl excluded because it produces multirooted result tree (need document fragment).
# lre08.xsl excluded because it produces multirooted result tree (need document fragment).
# lre13.xsl excluded because it tries to write text node directly to root (need document fragment).
# lre15.xsl excluded because it produces multirooted result tree (need document fragment).
# message01.xsl excluded because non-valid XML (has no root).
# message02.xsl excluded because it tries to write text node directly to root (need document fragment).
# node17.xsl excluded because it relies on the order of namespace nodes.
# numbering25.xsl excluded because it produces multirooted result tree (need document fragment).
# output26.xsl excluded because it tries to write text node directly to root (need document fragment).
# output33.xsl excluded because it outputs HTML that can not be compared.
# output42.xsl excluded because it produces multirooted result tree (need document fragment).
# output43.xsl excluded because it produces multirooted result tree (need document fragment).
# output46.xsl excluded because it produces multirooted result tree (need document fragment).
# output52.xsl excluded because it outputs HTML that can not be compared.
# output74.xsl excluded because it outputs HTML that can not be compared.
# output76.xsl excluded because it tries to write text node directly to root (need document fragment).
# predicate37 excluded because it tries to write text node directly to root (need document fragment).
# predicate38 excluded because it tries to write text node directly to root (need document fragment).
# select07.xsl excluded because it tries to write text node directly to root (need document fragment).
# select69.xsl excluded because it relies on the order of attribute nodes to product text.
# sort22.xsl excluded because it tries to write text node directly to root (need document fragment).
# sort23.xsl excluded because it tries to write text node directly to root (need document fragment).
# sort24.xsl excluded because it tries to write text node directly to root (need document fragment).
# sort25.xsl excluded because it tries to write text node directly to root (need document fragment).
# sort30.xsl excluded because it tries to write text node directly to root (need document fragment).
# sort31.xsl excluded because it tries to write text node directly to root (need document fragment).
# sort35.xsl excluded because it tries to write text node directly to root (need document fragment).
# sort37.xsl excluded because it tries to write text node directly to root (need document fragment).
# whitespace11.xsl excluded because it tries to write text node directly to root (need document fragment).
#
# lre07.xsl (bug [probably relativly harmless]) extra (repeated) namespace node.
# lre10.xsl (bug [probably relativly harmless]) extra namespace node on ped:out2.
# namespace02.xsl (bug [probably relativly harmless]) extra (repeated) namespace node.
# namespace20.xsl (bug [probably relativly harmless]) extra (repeated) namespace node.
# namespace24.xsl (bug [probably relativly harmless]) extra (repeated) namespace node.
excludes=attribvaltemplate08.xsl;impincl12.xsl;attribset17.xsl;axes59.xsl;axes62.xsl\
;conflictres19.xsl;idkey01.xsl;idkey07.xsl\
;idkey09.xsl;idkey30.xsl;idkey31.xsl;lre04.xsl;lre05.xsl;lre08.xsl\
;lre13.xsl;lre15.xsl\
;message01.xsl;message02.xsl;\
;node17.xsl;numbering25.xsl;output26.xsl;output33.xsl;output42.xsl\
;output43.xsl\
;output46.xsl;output52.xsl;output74.xsl;output76.xsl;position70.xsl;predicate37.xsl\
;predicate38.xsl\
;whitespace11.xsl\
;select07.xsl;select69.xsl\
;sort22.xsl;sort23.xsl;sort24.xsl;sort25.xsl;sort30.xsl;sort31.xsl;sort35.xsl;sort37.xsl\
;namespace02.xsl;namespace20.xsl;namespace24.xsl;lre07.xsl;lre10.xsl

# Run a specific list of files in the named file (see XLDirectoryIterator.java)
#fileList=myListOfFiles.txt

# Uncomment noErrTest to skip running any ./err subdir tests
noErrTest=true

fileChecker=org.apache.qetest.xsl.XHTFileCheckService

#---- Choose output: How much/what kinds of info should we log
# Choose output: How much logging info is saved: between 0 (very little) and 99 (lots)
loggingLevel=50

# If we should save performance-oriented info in the logfile
perfLogging=true

# Set debug for advanced debugging of the tests themselves
#debug=true

#---- Choose a liaison: only valid with flavor=xalan
# XDTM  Xalan-J 1.x/Xerces DTM -default- (uses xerces.jar)
#liaison=org.apache.xalan.xpath.dtm.DTMLiaison
# XDOM  Xalan-J 1.x/Xerces DOM (uses xerces.jar)
#liaison=org.apache.xalan.xpath.xdom.XercesLiaison

